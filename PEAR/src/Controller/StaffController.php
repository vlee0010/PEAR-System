<?php
namespace App\Controller;

use App\Model\Entity\Role;

class StaffController extends AppController
{
    public function initialize()
    {
        parent::initialize(); // TODO: Change the autogenerated stub
        $this->loadModel('Units');
        $this->loadModel('peer_reviews');
        $this->loadModel('Users');
        $this->loadModel('units_tutors');
        $this->loadModel('units_classes');
        $this->loadModel('students_classes');
        $this->loadModel('units_users');
        $this->loadModel('teams_users');
        $this->loadModel('teams');
        $this->loadModel('Classes');
        $this->loadModel('peer_reviews_users');
        $this->loadModel('Responses');
        $this->loadModel('Questions');




    }

    public function isAuthorized($user)
    {
        // If you are a user, you can access this dashboard.
        return Role::isStaff($user['role']);
    }

    public function index()
    {
        $tutor_id=$this->Auth->user('id');
        $unit_id_list=$this->units_tutors->find('list',array('field',array('unit_id')))->where(['tutor_id'=>$tutor_id]);
        $unit_list=[];
        foreach($unit_id_list as $unit_id){
            array_push($unit_list,$this->Units->find()->where(['id'=>$unit_id])->first());
        }
        $this->set(compact('unit_list'));
    }
    public function displayclass($id=null){
        $unit_class_list=$this->units_classes->find()->where(['unit_id'=>$id]);
        $class_id_list=[];
        $peer_review=$this->peer_reviews->find()->where(['unit_id'=>$id,'status'=>0])->first();
        $peer_id=$peer_review->id;
        foreach ($unit_class_list as $unit_class) {
            array_push($class_id_list,$unit_class->class_id);
        }
        $class_list=[];
        foreach ($class_id_list as $class_id){
            array_push($class_list,$this->Classes->find()->where(['id'=>$class_id])->first());

        }
        $this->set(compact('class_list','peer_id'));
    }
    public function displaystudent($id=null,$peer_id=null){
        $student_id_list=$this->students_classes->find('list',array('field',array('student_id')))->where(['class_id'=>$id]);
        $student_list=[];
        $peer_review_user_list=[];
        foreach ($student_id_list as $student_id){
            array_push($student_list,$this->Users->find()->where(['id'=>$student_id])->first());
            array_push($peer_review_user_list,$this->peer_reviews_users->find()->where(['peer_review_id'=>$peer_id,'user_id'=>$student_id])->first());
        }
        $peer_review=$this->peer_reviews->find()->where(['id'=>$peer_id])->first();
        $this->set(compact('student_list','peer_review','peer_review_user_list',"peer_id"));

    }

    public function displayResults($student_id =null, $peer_review_id=null ){
//        $response_list = $this->Responses->find('all',array(
//            'field'=>array('Response.*'),
//            'join'=>array(
//                array(
//                    'table'=>'Questions',
//                    'alias'=>'Question',
//                    'type'=>'INNER',
//                    'conditions'=>array('Responses.question_id'=>'Question.id')
//                ),
//            )
//        ))->where(['Responses.user_id'=>$student_id,'Responses.peer_review_id'=>$peer_review_id]);
        $response_list = $this->Responses->find()->contain([
            'Questions',
            'Users'
        ])->where(['user_id'=>$student_id,'peer_review_id'=>$peer_review_id]);
//        foreach ($response_list as $response){
//            debug($response);
//        }
        $this->set(compact('response_list'));
    }
}
