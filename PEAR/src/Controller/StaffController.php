<?php
namespace App\Controller;

use App\Model\Entity\Role;

class StaffController extends AppController
{
    public function initialize()
    {
        parent::initialize(); // TODO: Change the autogenerated stub
        $this->loadModel('Units');
        $this->loadModel('peer_reviews');
        $this->loadModel('Users');
        $this->loadModel('units_tutors');
        $this->loadModel('units_classes');
        $this->loadModel('students_classes');
        $this->loadModel('units_users');
        $this->loadModel('teams_users');
        $this->loadModel('teams');
        $this->loadModel('Classes');
        $this->loadModel('peer_reviews_users');


    }

    public function isAuthorized($user)
    {
        // If you are a user, you can access this dashboard.
        return Role::isStaff($user['role']);
    }

    public function index()
    {
        $tutor_id=$this->Auth->user('id');
        $unit_id_list=$this->units_tutors->find('list',array('field',array('unit_id')))->where(['tutor_id'=>$tutor_id]);
        $unit_list=[];
        foreach($unit_id_list as $unit_id){
            array_push($unit_list,$this->Units->find()->where(['id'=>$unit_id])->first());
        }

        $class_query = $this->units_tutors->find()->where(['tutor_id'=>$tutor_id]);
        $class_activity = $class_query->select([
            'unitname' => 'u.title',
            'unitcode' => 'u.code',
            'activity' => 'p.title',
            'datestart' => 'p.date_start',
            'dateend' => 'p.date_end',
        ])
            ->join([
                'u' => [
                    'table' => 'units',
                    'conditions' => [
                        'u.id = units_tutors.unit_id',
                        ]
                ],
                'p' => [
                    'table' => 'peer_reviews',
                    'conditions' => [
                        'p.unit_id = u.id'
                    ]
                ],
            ]);

        $this->set('class_activity',$class_activity);
        $this->set(compact('unit_list'));

    }
    public function displayclass($id=null){
        $unit_class_list=$this->units_classes->find()->where(['unit_id'=>$id]);
        $class_id_list=[];
        $peer_review=$this->peer_reviews->find()->where(['unit_id'=>$id,'status'=>0])->first();
        $peer_id=$peer_review->id;
        foreach ($unit_class_list as $unit_class) {
            array_push($class_id_list,$unit_class->class_id);
        }
        $class_list=[];
        foreach ($class_id_list as $class_id){
            array_push($class_list,$this->Classes->find()->where(['id'=>$class_id])->first());

        }
        $this->set(compact('class_list','peer_id'));
    }
    public function displaystudent($id=null,$peer_id=null){
        $student_id_list=$this->students_classes->find('list',array('field',array('student_id')))->where(['class_id'=>$id]);
        $student_list=[];
        $peer_review_user_list=[];
        foreach ($student_id_list as $student_id){
            array_push($student_list,$this->Users->find()->where(['id'=>$student_id])->first());
            array_push($peer_review_user_list,$this->peer_reviews_users->find()->where(['peer_review_id'=>$peer_id,'user_id'=>$student_id])->first());
        }
        $peer_review=$this->peer_reviews->find()->where(['id'=>$peer_id])->first();
        $this->set(compact('student_list','peer_review','peer_review_user_list'));

    }
    public function export()
    {
        $this->response = $this->response->withDownload('class_results.csv');
        $data = [
            ['a', 'b', 'c'],
            [1, 2, 3],
            ['you', 'and', 'me'],
        ];
        $_serialize = 'data';

        $this->viewBuilder()->setClassName('CsvView.Csv');
        $this->set(compact('data', '_serialize'));
    }
}
